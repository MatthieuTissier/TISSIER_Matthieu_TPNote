Routes disponibles : 
POST	/api/users	Créer un nouvel utilisateur	ROLE_ADMIN
GET	/api/users/{id}	Récupérer les informations d'un utilisateur	ROLE_ADMIN ou USER (si l'utilisateur est authentifié et que l'ID correspond)
PUT	/api/users/{id}	Mettre à jour les informations d'un utilisateur	ROLE_ADMIN ou USER (si l'utilisateur est authentifié et que l'ID correspond)
DELETE	/api/users/{id}	Supprimer un utilisateur	ROLE_ADMIN
POST	/api/reservations	Créer une nouvelle réservation	ROLE_USER
GET	/api/reservations/{id}	Récupérer les informations d'une réservation	ROLE_ADMIN ou USER (si l'utilisateur est l'auteur de la réservation)
PUT	/api/reservations/{id}	Mettre à jour une réservation	ROLE_USER (si l'utilisateur est l'auteur de la réservation)
DELETE	/api/reservations/{id}	Supprimer une réservation	ROLE_USER (si l'utilisateur est l'auteur de la réservation)

Requêtes JSON :
Créer un utilisateur (POST /api/users) :
{
  "id": 1,
  "email": "user@example.com",
  "name": "John Doe",
  "phoneNumber": "0123456789"
}

Obtenir un utilisateur (GET /api/users/{id})
{
  "id": 1,
  "email": "user@example.com",
  "name": "John Doe",
  "phoneNumber": "0123456789"
}

Mettre à jour un utilisateur (PUT /api/users/{id})
{
  "id": 1,
  "email": "user@example.com",
  "name": "John Smith",
  "phoneNumber": "9876543210"
}

Créer une réservation (POST /api/reservations)
{
  "id": 1,
  "date": "2024-12-15 18:00:00",
  "timeSlot": "18:00-20:00",
  "eventName": "Test Event",
  "user": 1
}

Obtenir une réservation (GET /api/reservations/{id})
{
  "id": 1,
  "date": "2024-12-15 18:00:00",
  "timeSlot": "18:00-20:00",
  "eventName": "Test Event",
  "user": 1
}

Mettre à jour une réservation (PUT /api/reservations/{id})
{
  "id": 1,
  "date": "2024-12-15 20:00:00",
  "timeSlot": "20:00-22:00",
  "eventName": "Test Event",
  "user": 1
}
